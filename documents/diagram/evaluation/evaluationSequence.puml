@startuml
title Login Diagram

actor User
participant "History (fxml)"
participant HistoryController
participant EvaluationFacade
participant AbstractFactoryDAO
participant FactoryDAOMySQL
participant ScoreOfferDAOMySql
participant CommentDAOMySQL
participant Connection
participant Statement
database DB


"History (fxml)"-->User: Display history offers

activate "History (fxml)"
activate User
activate DB


User->"History (fxml)":Choose offer to rate

"History (fxml)"->HistoryController: handleRate(offerID : int, rate : int)

activate HistoryController

HistoryController->EvaluationFacade: rate(offerID : int, rate : int)



activate EvaluationFacade

EvaluationFacade->AbstractFactoryDAO:getInstance()
activate AbstractFactoryDAO


AbstractFactoryDAO--> EvaluationFacade : FactoryDAOMySQL
deactivate AbstractFactoryDAO

EvaluationFacade -> FactoryDAOMySQL:getRateDAO()

activate FactoryDAOMySQL

FactoryDAOMySQL->ScoreOfferDAOMySql **:Create(connection)

activate ScoreOfferDAOMySql
FactoryDAOMySQL-->EvaluationFacade:ScoreOfferDAOMySql

deactivate FactoryDAOMySQL

EvaluationFacade->ScoreOfferDAOMySql: create(offerID: int, rate :int)

ScoreOfferDAOMySql->Connection: prepareStatement()
activate Connection

Connection-->Statement **: Create

activate Statement

Connection-->ScoreOfferDAOMySql: Statement

deactivate Connection

ScoreOfferDAOMySql->Statement:executeQuery()

Statement->DB: SQL Query

DB->Statement:Result

Statement-->ScoreOfferDAOMySql: ResultSet

deactivate Statement

ScoreOfferDAOMySql-->EvaluationFacade: return true
deactivate ScoreOfferDAOMySql


EvaluationFacade --> HistoryController : return true
note right
    Return true is this case
    (Because we put ourselves in the situation
    where there is no system error.)
end note



HistoryController-->"History (fxml)": Display box choice comment
"History (fxml)" -> HistoryController : handleComment(offerId : int, comment : String)
HistoryController -> EvaluationFacade : comment(offerId : int, comment : String)
EvaluationFacade -> FactoryDAOMySQL : getCommentDao()
activate FactoryDAOMySQL
FactoryDAOMySQL -> CommentDAOMySQL **: create(connection)
activate CommentDAOMySQL
FactoryDAOMySQL --> EvaluationFacade : CommentDaoMySQL
deactivate FactoryDAOMySQL
EvaluationFacade -> CommentDAOMySQL : create(offerId : int, comment : String)

CommentDAOMySQL->Connection: prepareStatement()
activate Connection

Connection-->Statement **: Create

activate Statement

Connection-->CommentDAOMySQL: Statement

deactivate Connection

CommentDAOMySQL->Statement:executeQuery()

Statement->DB: SQL Query

DB->Statement:Result

Statement-->CommentDAOMySQL: ResultSet

deactivate Statement
CommentDAOMySQL --> EvaluationFacade : return true
deactivate CommentDAOMySQL
EvaluationFacade --> HistoryController : return true
deactivate EvaluationFacade
HistoryController --> "History (fxml)" : Display box validation

deactivate EvaluationFacade

deactivate HistoryController

"History (fxml)"-->User: Display corresponding View
deactivate "History (fxml)"
deactivate DB
deactivate User

@enduml