@startuml
title Login Diagram

actor User
participant "Login (fxml)"
participant LoginController
participant SessionFacade
participant "User (class)"
participant UserManagement
participant AbstractFactoryDAO
participant ConnectionDBMySQL
participant JConnectorMySQL
participant FactoryDAOMySQL
participant UserDAOMySQL
participant Connection
participant Statement
database DB


"Login (fxml)"-->User: Display login view

activate "Login (fxml)"
activate User
activate DB


User->"Login (fxml)":Enter his credentials (mail : String, password : String)

"Login (fxml)"->LoginController: handleLogin(mail : String, password : String)

activate LoginController

LoginController->SessionFacade:login(mail : String, password : String)

deactivate LoginController

activate SessionFacade

SessionFacade->AbstractFactoryDAO:getInstance()
activate AbstractFactoryDAO

AbstractFactoryDAO -> ConnectionDBMySQL : getInstance()

activate ConnectionDBMySQL


ConnectionDBMySQL->JConnectorMySQL: getConnection(url : String, user : String, password : String)

activate JConnectorMySQL

JConnectorMySQL -> Connection **: Create

activate Connection
JConnectorMySQL-->ConnectionDBMySQL: Connection

deactivate JConnectorMySQL
AbstractFactoryDAO <-- ConnectionDBMySQL : connectionDBMySQL


AbstractFactoryDAO--> SessionFacade : FactoryDAOMySQL
deactivate AbstractFactoryDAO

SessionFacade -> FactoryDAOMySQL:getUserDAO()

activate FactoryDAOMySQL

FactoryDAOMySQL->UserDAOMySQL **:Create(connection)

activate UserDAOMySQL
FactoryDAOMySQL-->SessionFacade:UserDAOMySQL

deactivate FactoryDAOMySQL

SessionFacade->UserDAOMySQL: getUserByEmail(email : String)

UserDAOMySQL->Connection: prepareStatement()

Connection-->Statement **: Create

activate Statement

Connection-->UserDAOMySQL: Statement

deactivate Connection

UserDAOMySQL->Statement:executeQuery()

Statement->DB: SQL Query

DB->Statement:Result

Statement-->UserDAOMySQL: ResultSet

deactivate Statement

UserDAOMySQL-->SessionFacade: return new(user) : User
alt user != null

    deactivate UserDAOMySQL
    SessionFacade->UserManagement: comparePassword(user: User, password:String, salt : String)
    activate UserManagement
    UserManagement -->SessionFacade: return check : boolean
    deactivate UserManagement



end

SessionFacade-->LoginController: return user

deactivate SessionFacade

activate LoginController

alt if user != null

LoginController->LoginController:isBanned(password:String)

    alt user isBanned

        LoginController-->"Login (fxml)": Display banned users message

    else user is not banned

        LoginController-->"Login (fxml)": Display home view
    end

else return is null

    LoginController-->"Login (fxml)": Display not found user message

end

deactivate LoginController

"Login (fxml)"-->User: Display corresponding View
deactivate "Login (fxml)"
deactivate DB
deactivate UserManagement
deactivate User
deactivate ConnectionDBMySQL

@enduml