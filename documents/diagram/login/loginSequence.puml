@startuml
title Login Diagram

actor User
participant "Login (fxml)"
participant LoginController
participant SessionFacade
participant "User (class)"
participant UserManagement
participant UserDao
participant AbstractFactoryDAO
participant ConnectionDBMySQL
participant JConnectorMySQL
participant FactoryDAOMySQL
participant UserDAOMySQL
participant Connection
participant Statement
database DB


"Login (fxml)"-->User: Display login view

activate "Login (fxml)"
activate User
activate DB


User->"Login (fxml)":Enter his credentials (mail : String, password : String)

"Login (fxml)"->LoginController: handleLogin(actionEvent : ActionEvent)

activate LoginController

LoginController->SessionFacade:login(mail : String, password : String)

deactivate LoginController

activate SessionFacade

SessionFacade->UserDao:getInstance()

alt if (first getInstance)
    activate UserDao
    UserDao -> AbstractFactoryDAO : getInstance()
    activate AbstractFactoryDAO

        AbstractFactoryDAO -> ConnectionDBMySQL : getInstance()

        activate ConnectionDBMySQL


        ConnectionDBMySQL->JConnectorMySQL: getConnection(url : String, user : String, password : String)

        activate JConnectorMySQL

        JConnectorMySQL -> Connection **: Create

        activate Connection
        JConnectorMySQL-->ConnectionDBMySQL: Connection

        deactivate JConnectorMySQL
        AbstractFactoryDAO <-- ConnectionDBMySQL : connectionDBMySQL
    AbstractFactoryDAO --> UserDao : FactoryDAOMySQL
    deactivate AbstractFactoryDAO

    UserDao -> FactoryDAOMySQL : getComment()
    activate FactoryDAOMySQL
    FactoryDAOMySQL -> UserDAOMySQL **:Create(connection)
    activate UserDAOMySQL
    FactoryDAOMySQL --> UserDao : UserDaoMySQL

    deactivate FactoryDAOMySQL
end

activate AbstractFactoryDAO



UserDao --> SessionFacade : FactoryDAOMySQL
deactivate AbstractFactoryDAO


deactivate FactoryDAOMySQL

SessionFacade->UserDAOMySQL: getUserByEmail(email : String)

UserDAOMySQL->Connection: prepareStatement()

Connection-->Statement **: Create

activate Statement

Connection-->UserDAOMySQL: Statement

deactivate Connection

UserDAOMySQL->Statement:executeQuery()

Statement->DB: SQL Query

DB->Statement:Result

Statement-->UserDAOMySQL: ResultSet

deactivate Statement

UserDAOMySQL-->SessionFacade: return new(user) : User
alt user != null

    deactivate UserDAOMySQL
    SessionFacade->UserManagement: comparePassword(user: User, password:String, salt : String)
    activate UserManagement
    UserManagement -->SessionFacade: return User
    deactivate UserManagement
    alt user != null
        alt user.isBanned
            SessionFacade -->SessionFacade: UserBannedException raised
        end
    end


else user == null
        SessionFacade -->SessionFacade: UserNotFoundException raised
end

SessionFacade-->LoginController : return user
activate LoginController

deactivate SessionFacade

LoginController-->"Login (fxml)": Display home view or login view with error messages

deactivate LoginController

"Login (fxml)"-->User: Display corresponding View
deactivate "Login (fxml)"
deactivate DB
deactivate UserManagement
deactivate User
deactivate ConnectionDBMySQL

@enduml