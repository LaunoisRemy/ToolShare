@startuml
title Login Diagram

actor User
participant "Login (fxml)"
participant LoginController
participant UserFacade
participant AbstractFactoryDAO
participant "User (class)"
participant Session
participant FactoryDAOMySQL
participant UserDAOMySQL
participant JConnectorMySQL
participant JConnection
participant Statement
database DB


"Login (fxml)"-->User: Display login view

activate "Login (fxml)"
activate User
activate DB


User->"Login (fxml)":Enter his credentials (mail : String, password : String)

"Login (fxml)"->LoginController: handleLogin(mail : String, password : String)

activate LoginController

LoginController->UserFacade:login(mail : String, password : String)

deactivate LoginController

activate UserFacade

UserFacade->AbstractFactoryDAO:getFactory(Typedb:Enum(typedb)

activate AbstractFactoryDAO

AbstractFactoryDAO--> UserFacade : FactoryDAOMySQL
deactivate AbstractFactoryDAO

UserFacade -> FactoryDAOMySQL:getUserDAO()

activate FactoryDAOMySQL

FactoryDAOMySQL->UserDAOMySQL **:Create

activate UserDAOMySQL

FactoryDAOMySQL-->UserFacade:UserDAOMySQL

deactivate FactoryDAOMySQL

UserDAOMySQL->JConnectorMySQL: getConnection(url : String, user : String, password : String)

activate JConnectorMySQL

JConnectorMySQL--> JConnection **: Create

activate JConnection

JConnectorMySQL-->UserDAOMySQL: JConnection

deactivate JConnectorMySQL

UserFacade->UserDAOMySQL: getUserByEmail(email : String)

UserDAOMySQL->JConnection: prepareStatement()

JConnection-->Statement **: Create

activate Statement

JConnection-->UserDAOMySQL: Statement

deactivate JConnection

UserDAOMySQL->Statement:executeQuery()

Statement->DB: SQL Query

DB->Statement:Result

Statement-->UserDAOMySQL: ResultSet

deactivate Statement

UserDAOMySQL-->UserFacade: return user : User
alt user != null

    deactivate UserDAOMySQL
    UserFacade->"User (class)": checkPassword(password:String)
    activate "User (class)"
    "User (class)"-->UserFacade: return check : boolean
    deactivate "User (class)"

    alt if check
        UserFacade->Session **: getInstance()

        activate Session

        Session-->UserFacade:getUser()

    else check == false
        UserFacade-->UserFacade: user = null
    end

end

UserFacade-->LoginController: return user

deactivate UserFacade

activate LoginController

alt if user != null

LoginController->LoginController:isBanned(password:String)

    alt user isBanned

        LoginController-->"Login (fxml)": Display banned users message

    else user is not banned

        LoginController-->"Login (fxml)": Display home view
    end

else return is null

    LoginController-->"Login (fxml)": Display not found user message

end

deactivate LoginController

"Login (fxml)"-->User: Display corresponding View
deactivate "Login (fxml)"
deactivate DB
deactivate Session
deactivate User

@enduml