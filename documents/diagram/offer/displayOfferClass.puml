@startuml

package dao {


    interface OfferDao{
        getOffersByCategory(idCat:int): Offer[]
        getPriorityOffers(): PriorityOffer[]
        PriorityOfferExpired(id : int) : boolean
    }
    class OfferDaoMySQL
    AbstractFactoryDao <|-- FactoryDaoSQL
    OfferDao <.. OfferDaoMySQL

    interface DAO<T>{
        find(id : int) : T
        create(T obj) : T
        update(T obj) : T
        delete(T obj) : boolean
    }

    abstract AbstractFactoryDao{
        - {static} final connectionDB : ConnectionDB
        + {static} getFactory(type : TypeDB) : AbstractFactoryDao
        + getOfferDao() : OfferDao
    }

    class FactoryDaoSQL{
    }


    DAO <|-- OfferDao
}
package db{
    class ConnectionDBMySQL{
        - connection : Connection
        - ConnectionDBMySQL()
        + {static} getInstance() : ConnectionDBMySQL
        + getDb() : Connection
    }

    class LazyHolderDB{
        + {static} final INSTANCE : ConnectionDBMySQL
    }
    interface ConnectionDB
    ConnectionDBMySQL -Left-> LazyHolderDB
    ConnectionDBMySQL .up.|> ConnectionDB

}
package business{
    class OfferFacade{
    + OfferFacade()
    + getOffer(idOffer : int) : Offer
    }
    class SessionFacade{
        + SessionFacade()
        + login(mail : String, password : String) : Void
        + register(email : String, firstName : String, lastName : String, city : String, phoneNumber : String, password : String) : Void
        + getInstance() : SessionFacade
    }

    OfferFacade --> SessionFacade
    class Offer{
        -offerId : int
        -title : String
        -pricePerDay : int
        -description : String
        -toolState : String
        -isPriority : boolean
        -userId : int
        -categoryId : int
        + Offer(String title,int price,String desc,String state,boolean isPriority,int userId,int categoryId)
        + getOfferId() : int
        + getTitle() : String
        + getPricePerDay() : int
        + getDescription() : String
        + getUserId() : int
        + getCategoryId() : int
        + setTitle(title:String) : void
        + setDescription(description:String) : void
        + setPricePerDay(price:int) : void
        + setUserId(userId:int) : void
        + setCategoryId(categoryId:int) : void
        + setIsPriority(b:boolean) : void

    }

    class PriorityOffer{
        -dateStartPriority : date
        -dateEndPriority : date
        +PriorityOffer()
        +isExpired() : boolean
    }
    Offer <|-- PriorityOffer


}

package gui{

    class LoadView{
        + {static} load(nameFxml : Parent) : Parent
        + {static} changeScreen(actionEvent : ActionEvent, view : String) : void
    }

    package controller{
        class OfferController{
            + handleClickOnOffer(idOffer : int) : void
        }
    }
}
OfferFacade <--Up- OfferController
OfferFacade .Up.> AbstractFactoryDao



@enduml